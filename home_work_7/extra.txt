Створіть клас Book, який представляє книгу з наступними властивостями:
Властивості:
title (назва книги)
author (автор)
year (рік публікації)
genres (масив жанрів)
ratings (масив чисел, що представляють оцінки читачів)
Геттери та сеттери:
Геттер averageRating — обчислює та повертає середню оцінку книги.
Сеттер для year — дозволяє встановити рік публікації з перевіркою, що рік не в майбутньому.
Сеттер для genres — дозволяє додавати нові жанри, але не допускає дублювання жанрів.
Методи:
addRating(rating) — додає оцінку до масиву ratings, перевіряючи, що оцінка є числом від 1 до 5.
getInfo() — повертає рядок з інформацією про книгу у форматі: "Назва: ..., Автор: ..., Рік: ..., Жанри: ..."..

Ще задачі на робботу з класами
Клас User
Властивості:
username (ім'я користувача)
password (пароль користувача)
role (роль користувача, наприклад, "admin", "editor", "viewer")
isActive (логічне значення, чи активний користувач)
Методи:
login(password) — перевіряє, чи збігається введений пароль з паролем користувача. Якщо так, виводить повідомлення про успішний вхід; якщо ні, виводить повідомлення про помилку.
logout() — виводить повідомлення про вихід користувача.
Геттер info — повертає рядок з інформацією про користувача у форматі: "Користувач: ..., Роль: ..., Статус: ...".

Клас UserManager
Властивості:
users (масив користувачів)
Методи:
addUser(user) — додає користувача до системи. Перевіряє, чи користувач з таким username вже існує; якщо так, виводить повідомлення про помилку.
removeUser(username) — видаляє користувача з системи за іменем користувача.
getUser(username) — повертає користувача з системи за іменем користувача.
getActiveUsers() — повертає масив активних користувачів.
authenticate(username, password) — перевіряє, чи існує користувач з таким іменем та паролем; якщо так, повертає користувача; якщо ні, виводить повідомлення про помилку.
updateUserRole(username, newRole) — оновлює роль користувача, перевіряючи, що нова роль є однією з дозволених ("admin", "editor", "viewer").